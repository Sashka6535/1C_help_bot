from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from Handlers.delete_mes import edit_or_send_message
from Handlers.link_photo import logo_photo
from Handlers.questions.h_errors import errors_router
from Handlers.h_call_to_bsc import callbsc_router
from Handlers.h_export_import import exoprtimport_router
from Handlers.inconsistencies import invcons_router
from Handlers.print_dock import printdock_router

from Keyboards.callback_datas import BuyCallbackFactory
from Keyboards.key_start import start_menu

main_router = Router()

main_router.include_routers(invcons_router, printdock_router, errors_router, callbsc_router, exoprtimport_router)


# üìå –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@main_router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    try:
        await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    except Exception:
        pass

    data = await state.get_data()

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞
    for key in ["first_message_id"]:
        msg_id = data.get(key)
        if msg_id:
            try:
                await message.bot.delete_message(chat_id=message.chat.id, message_id=msg_id)
            except Exception:
                pass

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = await message.answer_photo(
        photo=logo_photo,
        caption=(
            "<b>–ü—Ä–∏–≤—ñ—Ç!‚úåÔ∏è</b>\n"
            "–Ø —Ç–≤—ñ–π –±–æ—Ç –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ü§ñ\n"
            "–í—ñ–¥–ø–æ–≤—ñ–º –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç—è–º –º—ñ–∂ 1–°üíª —Ç–∞ SWEüñ•Ô∏è,\n"
            "–ø—ñ–¥–∫–∞–∂—É, —è–∫ —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Ç–∞ —Ä–æ–∑–¥—Ä—É–∫—É–≤–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ üßæ\n"
            "—Ç–∞ –¥–æ –∫–æ–≥–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è, —è–∫—â–æ –º–æ—ó—Ö –∑–Ω–∞–Ω—å –±—É–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æüë©‚Äçüéì."
        ),
        parse_mode="HTML",
        reply_markup=start_menu
    )

    await state.update_data({
        "first_message_id": msg.message_id,
        "started": True
    })


# üßπ –£–¥–∞–ª–µ–Ω–∏–µ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@main_router.message(F.text)
async def delete_unwanted_text(message: Message):
    try:
        await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    except Exception:
        pass


# üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫
@main_router.callback_query(BuyCallbackFactory.filter(F.item_name == "choice_menu"))
async def handle_choice_discrepancy(callback: CallbackQuery, state: FSMContext):
    await edit_or_send_message(
        bot=callback.bot,
        chat_id=callback.message.chat.id,
        state=state,
        photo=logo_photo,
        text=(
            "<b>–ü—Ä–∏–≤—ñ—Ç!‚úåÔ∏è</b>\n"
            "–Ø —Ç–≤—ñ–π –±–æ—Ç –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ü§ñ\n"
            "–í—ñ–¥–ø–æ–≤—ñ–º –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ —Ä–æ–∑–±—ñ–∂–Ω–æ—Å—Ç—è–º –º—ñ–∂ 1–°üíª —Ç–∞ SWEüñ•Ô∏è,\n"
            "–ø—ñ–¥–∫–∞–∂—É, —è–∫ —Å—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Ç–∞ —Ä–æ–∑–¥—Ä—É–∫—É–≤–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ üßæ\n"
            "—Ç–∞ –¥–æ –∫–æ–≥–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è, —è–∫—â–æ –º–æ—ó—Ö –∑–Ω–∞–Ω—å –±—É–¥–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æüë©‚Äçüéì."),
        parse_mode="HTML",
        reply_markup=start_menu
    )
    await callback.answer()
